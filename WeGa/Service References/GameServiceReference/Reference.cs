//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeGa.GameServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServiceReference.IGameService")]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Login", ReplyAction="http://tempuri.org/IGameService/LoginResponse")]
        System.Collections.Generic.Dictionary<string, string> Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Login", ReplyAction="http://tempuri.org/IGameService/LoginResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RegisterPlayer", ReplyAction="http://tempuri.org/IGameService/RegisterPlayerResponse")]
        bool RegisterPlayer(string username, string nickname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RegisterPlayer", ReplyAction="http://tempuri.org/IGameService/RegisterPlayerResponse")]
        System.Threading.Tasks.Task<bool> RegisterPlayerAsync(string username, string nickname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/getPlayersNm", ReplyAction="http://tempuri.org/IGameService/getPlayersNmResponse")]
        string[] getPlayersNm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/getPlayersNm", ReplyAction="http://tempuri.org/IGameService/getPlayersNmResponse")]
        System.Threading.Tasks.Task<string[]> getPlayersNmAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/CreateGame", ReplyAction="http://tempuri.org/IGameService/CreateGameResponse")]
        System.Collections.Generic.Dictionary<string, string> CreateGame(string SenderNickName, string ReceiverNickName, string Letters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/CreateGame", ReplyAction="http://tempuri.org/IGameService/CreateGameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> CreateGameAsync(string SenderNickName, string ReceiverNickName, string Letters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/SendWord", ReplyAction="http://tempuri.org/IGameService/SendWordResponse")]
        System.Collections.Generic.Dictionary<string, string> SendWord(string wordPlayed, int gameId, string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/SendWord", ReplyAction="http://tempuri.org/IGameService/SendWordResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> SendWordAsync(string wordPlayed, int gameId, string nickname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : WeGa.GameServiceReference.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<WeGa.GameServiceReference.IGameService>, WeGa.GameServiceReference.IGameService {
        
        public GameServiceClient() {
        }
        
        public GameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, string> Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool RegisterPlayer(string username, string nickname, string password) {
            return base.Channel.RegisterPlayer(username, nickname, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterPlayerAsync(string username, string nickname, string password) {
            return base.Channel.RegisterPlayerAsync(username, nickname, password);
        }
        
        public string[] getPlayersNm() {
            return base.Channel.getPlayersNm();
        }
        
        public System.Threading.Tasks.Task<string[]> getPlayersNmAsync() {
            return base.Channel.getPlayersNmAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> CreateGame(string SenderNickName, string ReceiverNickName, string Letters) {
            return base.Channel.CreateGame(SenderNickName, ReceiverNickName, Letters);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> CreateGameAsync(string SenderNickName, string ReceiverNickName, string Letters) {
            return base.Channel.CreateGameAsync(SenderNickName, ReceiverNickName, Letters);
        }
        
        public System.Collections.Generic.Dictionary<string, string> SendWord(string wordPlayed, int gameId, string nickname) {
            return base.Channel.SendWord(wordPlayed, gameId, nickname);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> SendWordAsync(string wordPlayed, int gameId, string nickname) {
            return base.Channel.SendWordAsync(wordPlayed, gameId, nickname);
        }
    }
}
